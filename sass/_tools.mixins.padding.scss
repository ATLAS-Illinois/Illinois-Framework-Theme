// Padding
//
// Creates Padding for a specified element.  The mixin loops from 0-50 creating
// top, right, bottom, left, top & bottom, left & right and all
//
// Usage:
//
// `@include(padding 0px);` in `_utilities.padding.scss` file
//
// Parameters:
//
// `$pairs` - An array of padding and values.
//
// `$padding` - Takes the initial padding string in the $pair (in this case it's "padding").
//
// `$value` - Value of padding ( in this case it starts at 0px).
//
// `$pixels` - the px value.
//
// `$rems` - the rem value (px * 16).
//
//
//
// Markup:
// @mixin padding($pairs...) {
//   @each $padding, $value in $pairs {
//     .u-#{$padding} {
//       $i: 1;
//       @while $i <= 50 {
//         $pixels: $i * 1px;
//         $rems: ($i * 1rem)/16;
//         &--top-#{$i} {
//           padding-top: $pixels;
//           padding-top: $rems;
//         }
//         &--right-#{$i} {
//           padding-right: $pixels;
//           padding-right: $rems;
//         }
//         &--bottom-#{$i} {
//           padding-bottom: $pixels;
//           padding-bottom: $rems;
//         }
//         &--left-#{$i} {
//           padding-left: $pixels;
//           padding-left: $rems;
//         }
//         &--top-bottom-#{$i} {
//           padding: $pixels 0;
//           padding: $rems 0;
//         }
//         &--left-right-#{$i} {
//           padding: 0 $pixels;
//           padding: 0 $rems;
//         }
//         &--all-#{$i} {
//           padding: $pixels;
//           padding: $rems;
//         }
//         $i: $i + 1;
//       }
//     }
//   }
// }
//
// Styleguide 1.13

// options include top, bottom, left, right

@mixin padding($pairs...) {
  @each $padding, $value in $pairs {
    .u-#{$padding} {

      $i: 0;
      @while $i <= 50 {
        $pixels: $i * 1px;
        $rems: ($i * 1rem)/16;
        &--top-#{$i} {
          padding-top: $pixels !important;
          padding-top: $rems !important;
        }
        &--right-#{$i} {
          padding-right: $pixels !important;
          padding-right: $rems !important;
        }
        &--bottom-#{$i} {
          padding-bottom: $pixels !important;
          padding-bottom: $rems !important;
        }
        &--left-#{$i} {
          padding-left: $pixels !important;
          padding-left: $rems !important;
        }
        &--top-bottom-#{$i} {
          padding: $pixels 0 !important;
          padding: $rems 0 !important;
        }
        &--left-right-#{$i} {
          padding: 0 $pixels !important;
          padding: 0 $rems !important;
        }
        &--all-#{$i} {
          padding: $pixels !important;
          padding: $rems !important;
        }
        $i: $i + 1;
      }
    }
  }
}
